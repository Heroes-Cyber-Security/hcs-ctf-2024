#include <iostream>
#include <fstream>
#include <cstring>
using namespace std;
// template praktikum struktur data

void setup()
{
    setvbuf(stdout, NULL, _IONBF, 0);
    setvbuf(stdin, NULL, _IONBF, 0);
    setvbuf(stderr, NULL, _IONBF, 0);
}

template <typename T>
void fs(T &x)
{
    int n = 1;
    char c = getchar();
    x = 0;
    for (; (c < 48 || c > 57) && c != '-'; c = getchar())
        ;
    if (c == '-')
    {
        n = -1;
        c = getchar();
    }
    for (; (c > 47 && c < 58); c = getchar())
        x = (x << 1) + (x << 3) + c - 48;
    x = n * x;
}

void menu()
{
    cout << "1. 📝\n";
    cout << "2. 🔍\n";
    cout << "3. 🗑️\n";
    cout << "4. 🚩\n";
    cout << "5. 🚪\n";
    cout << ">> ";
}

char *notes[8] = {0};

void add()
{
    cout << "Index: ";
    int index;
    fs(index);
    if (index < 0 || index > 7)
    {
        cout << "🚫\n";
        return;
    }
    cout << "What to write?\n";
    char buffer[128];
    fgets(buffer, 128, stdin);

    notes[index] = new char[strlen(buffer) + 1];
    strcpy(notes[index], buffer);
    cout << "📝 ✅\n";
    cout << "\n";
}

void view()
{
    cout << "Index: ";
    int index;
    fs(index);
    if (index < 0 || index > 7 || notes[index] == 0)
    {
        cout << "🚫\n";
        return;
    }
    else
    {
        cout << notes[index];
        cout << "\n";
    }
}

void del()
{
    cout << "Index: ";
    int index;
    fs(index);
    if (index < 0 || index > 7 || notes[index] == 0)
    {
        cout << "🚫\n";
        return;
    }
    delete[] notes[index];
    cout << "🗑️ ✅\n";
    cout << "\n";
}

void read_flag()
{
    ifstream flag("flag.txt");
    if (flag.is_open())
    {
        char *flag_buffer;
        for (int i = 0; i < 7; i++)
        {
            flag_buffer = (char *)malloc(128);
        }
        flag.read(flag_buffer, 128);
    }
    else
    {
        cout << "Flag not found, if this happens on the remote server, please contact an admin.\n";
        exit(-1);
    }
    flag.close();
    cout << "🚩 ❓\n\n";
    return;
}

int main()
{
    setup();
    while (true)
    {
        cout << "[ 📚 ]\n";
        menu();
        int choice;
        fs(choice);
        switch (choice)
        {
        case 1:
            add();
            break;
        case 2:
            view();
            break;
        case 3:
            del();
            break;
        case 4:
            read_flag();
            break;
        case 5:
            cout << "👋\n";
            return 0;
        default:
            cout << "₍ > ⤙ < ₎\n";
            break;
        }
    }
}
